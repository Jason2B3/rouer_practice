[{"C:\\Users\\jason\\Desktop\\router_practice\\src\\index.js":"1","C:\\Users\\jason\\Desktop\\router_practice\\src\\App.js":"2","C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\pages\\QuoteDetail.js":"3","C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\pages\\AllQuotes.js":"4","C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\pages\\NewQuote.js":"5","C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\comments\\Comments.js":"6","C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\comments\\NewCommentForm.js":"7","C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\layout\\Layout.js":"8","C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\layout\\MainNavigation.js":"9","C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\quotes\\QuoteList.js":"10","C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\quotes\\QuoteItem.js":"11","C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\quotes\\QuoteForm.js":"12","C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\UI\\Card.js":"13","C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\UI\\LoadingSpinner.js":"14","C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\quotes\\HighlightedQuote.js":"15","C:\\Users\\jason\\Desktop\\router_practice\\src\\context.js":"16","C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\pages\\NotFound.js":"17","C:\\Users\\jason\\Desktop\\router_practice\\src\\hooks\\use-http.js":"18","C:\\Users\\jason\\Desktop\\router_practice\\src\\lib\\api.js":"19","C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\quotes\\NoQuotesFound.js":"20","C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\comments\\CommentsList.js":"21","C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\comments\\CommentItem.js":"22"},{"size":236,"mtime":1631569143684,"results":"23","hashOfConfig":"24"},{"size":1368,"mtime":1632244838097,"results":"25","hashOfConfig":"24"},{"size":2222,"mtime":1632244519543,"results":"26","hashOfConfig":"24"},{"size":1156,"mtime":1631781604921,"results":"27","hashOfConfig":"24"},{"size":1704,"mtime":1631926780830,"results":"28","hashOfConfig":"24"},{"size":2136,"mtime":1632134295044,"results":"29","hashOfConfig":"24"},{"size":1514,"mtime":1632133017080,"results":"30","hashOfConfig":"24"},{"size":298,"mtime":1631529912229,"results":"31","hashOfConfig":"24"},{"size":626,"mtime":1631529548696,"results":"32","hashOfConfig":"24"},{"size":2327,"mtime":1631742556528,"results":"33","hashOfConfig":"24"},{"size":634,"mtime":1631780989296,"results":"34","hashOfConfig":"24"},{"size":2257,"mtime":1631610195008,"results":"35","hashOfConfig":"24"},{"size":156,"mtime":1616596573000,"results":"36","hashOfConfig":"24"},{"size":167,"mtime":1616596573000,"results":"37","hashOfConfig":"24"},{"size":270,"mtime":1616596573000,"results":"38","hashOfConfig":"24"},{"size":524,"mtime":1631571929111,"results":"39","hashOfConfig":"24"},{"size":162,"mtime":1631577452502,"results":"40","hashOfConfig":"24"},{"size":1950,"mtime":1631957871284,"results":"41","hashOfConfig":"24"},{"size":2460,"mtime":1631792886751,"results":"42","hashOfConfig":"24"},{"size":331,"mtime":1631781209100,"results":"43","hashOfConfig":"24"},{"size":334,"mtime":1616596573000,"results":"44","hashOfConfig":"24"},{"size":200,"mtime":1616596573000,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1ah1w09",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\jason\\Desktop\\router_practice\\src\\index.js",[],["95","96"],"C:\\Users\\jason\\Desktop\\router_practice\\src\\App.js",[],"C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\pages\\QuoteDetail.js",["97","98","99"],"import React from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Route, useRouteMatch, useLocation, Link } from \"react-router-dom\";\r\nimport Comments from \"../comments/Comments\";\r\nimport { useCustomHook } from \"../../context\";\r\nimport HighlightedQuote from \"../quotes/HighlightedQuote\";\r\nimport { getSingleQuote } from \"../../lib/api\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nexport default function QuoteDetail() {\r\n  const match = useRouteMatch();\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote, // renaming the data returned from useHttp\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  // Get :quoteID that brought us to this page (route parameter value from App.js)\r\n  const params = useParams();\r\n  const quoteID = params.quoteID;\r\n  //% Grabs a quote from Firebase everytime quoteID changes (or sendRequest)\r\n  useEffect(() => {\r\n    sendRequest(quoteID); // async function should be inside useEffect\r\n  }, [sendRequest, quoteID]); \r\n\r\n  //# Conditional Return JSX Area -----------------------------\r\n  //# ORDER: pending → error → found nothing → success JSX\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        PLACEHOLDER FOR LOADING SPINNER\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered\">{error}</p>;\r\n  }\r\n  if (!loadedQuote.text) return <p>No quote found!</p>;\r\n  const pathToQuotesIDPage = match.url;\r\n  const pathToCommentsPage = `${match.url}/comments`;\r\n  return (\r\n    <>\r\n      <HighlightedQuote author={loadedQuote.author} text={loadedQuote.text} />\r\n      {/* We're already inside the next route that follows */}\r\n      <Route path={pathToQuotesIDPage} exact>\r\n        <div className=\"centered\">\r\n          <Link to={pathToCommentsPage} className=\"btn--flat\">\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      {/* This route's taken if we press the \"load comments\" button */}\r\n      <Route path={pathToCommentsPage} exact>\r\n        <Comments quoteID={quoteID} />\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n/*\r\nhttp://localhost:3000/quotes/q1\r\n*/\r\n","C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\pages\\AllQuotes.js",[],"C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\pages\\NewQuote.js",[],"C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\comments\\Comments.js",["100"],"import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getAllComments } from \"../../lib/api\";\n// Comment imports\nimport classes from \"./Comments.module.css\";\nimport useHttp from \"../../hooks/use-http\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = ({ quoteID }) => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n  // Run async code with useEffect\n  useEffect(() => {\n    sendRequest(quoteID); // quoteID is a long random string that Firebase made\n  }, [sendRequest, quoteID]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  // Immediately loads all comments after its added by pressing the button\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteID); // quoteID is a long random string that Firebase made\n  }, [sendRequest, quoteID]);\n\n  let comments;\n  //% Conditional JSX for pending state\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  //% Conditional JSX for completed state with comments retrieved\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n  //% Conditional JSX for completed state with no comments found\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments were added yet!</p>;\n  }\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteID={quoteID}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\comments\\NewCommentForm.js",[],"C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\layout\\Layout.js",[],"C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\layout\\MainNavigation.js",[],"C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\quotes\\QuoteList.js",["101"],"import { Fragment, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport QuoteItem from \"./QuoteItem\";\r\nimport classes from \"./QuoteList.module.css\";\r\n\r\nconst sortQuotes = (quotes, sortOrder) => {\r\n  return quotes.sort((quoteA, quoteB) => {\r\n    if (sortOrder) return quoteA.id > quoteB.id ? 1 : -1;\r\n    if (!sortOrder) return quoteA.id < quoteB.id ? 1 : -1;\r\n  });\r\n};\r\n\r\nconst QuoteList = (props) => {\r\n  // ----------------[ GRAB REQUIRED DATA ]------------------------\r\n  const history = useHistory(); // history object\r\n  const location = useLocation(); // location object\r\n\r\n  //% Break down the current URL's query parameters\r\n  let queryParameters = new URLSearchParams(location.search);\r\n  const qpValue = queryParameters.get(\"sort\"); // equals undefined, asc, or desc\r\n\r\n  //% Sort the quotes based on the query parameter of the searched URL\r\n  let stateVari;\r\n  if (qpValue === \"desc\") stateVari = false;\r\n  if (qpValue === \"asc\") stateVari = true;\r\n  if (!qpValue) stateVari = true; // if QP's undefined → sort ascending by default\r\n  const [sortOrder, setSortOrder] = useState(stateVari);\r\n  const sortedQuotes = sortQuotes(props.quotes, sortOrder);\r\n\r\n  //% Switch query parameter between ?sort=asc or ?sort=desc when we hit the button\r\n  const changeSortingHandler = () => {\r\n    const flippedSortOrder = sortOrder ? \"desc\" : \"asc\";\r\n    history.push({\r\n      pathname: window.location.pathname,\r\n      search: `?sort=${flippedSortOrder}`,\r\n    });\r\n\r\n    setSortOrder((state) => !state); // flip the sortOrder value for real now\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <button onClick={changeSortingHandler}>\r\n          Sort {sortOrder ? \"descending\" : \"ascending\"}\r\n        </button>\r\n        <p>Currently sorted {sortOrder ? \"ascending\" : \"descending\"}</p>\r\n      </div>\r\n      <ul className={classes.list}>\r\n        {sortedQuotes.map((quote) => (\r\n          <QuoteItem\r\n            key={quote.id}\r\n            id={quote.id}\r\n            author={quote.author}\r\n            text={quote.text}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteList;\r\n// http://localhost:3000/quotes       (ascending)\r\n// http://localhost:3000/quotes?sort=desc (descending)\r\n// http://localhost:3000/quotes?sort=asc  (ascending)\r\n","C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\quotes\\QuoteItem.js",[],"C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\quotes\\QuoteForm.js",[],"C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\UI\\Card.js",[],"C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\UI\\LoadingSpinner.js",[],"C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\quotes\\HighlightedQuote.js",[],"C:\\Users\\jason\\Desktop\\router_practice\\src\\context.js",["102"],"import { useState, createContext, useContext } from \"react\"; // import useContext\r\nconst AAA = createContext();\r\nexport const useCustomHook = () => useContext(AAA); // export custom hook\r\n\r\nexport default function BBB(props) {\r\n  const DUMMY_QUOTES = [\r\n    { id: \"q1\", author: \"max\", text: \"Learning React is fun!\" },\r\n    { id: \"q2\", author: \"Maximilian\", text: \"Learning React is great!\" },\r\n  ];\r\n  const distribution = { DUMMY_QUOTES };\r\n  return <AAA.Provider value={distribution}>{props.children}</AAA.Provider>;\r\n}\r\n","C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\pages\\NotFound.js",[],"C:\\Users\\jason\\Desktop\\router_practice\\src\\hooks\\use-http.js",[],"C:\\Users\\jason\\Desktop\\router_practice\\src\\lib\\api.js",[],"C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\quotes\\NoQuotesFound.js",[],"C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\comments\\CommentsList.js",[],"C:\\Users\\jason\\Desktop\\router_practice\\src\\components\\comments\\CommentItem.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":3,"column":32,"nodeType":"109","messageId":"110","endLine":3,"endColumn":43},{"ruleId":"107","severity":1,"message":"111","line":5,"column":10,"nodeType":"109","messageId":"110","endLine":5,"endColumn":23},{"ruleId":"107","severity":1,"message":"112","line":9,"column":8,"nodeType":"109","messageId":"110","endLine":9,"endColumn":22},{"ruleId":"107","severity":1,"message":"113","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":19},{"ruleId":"114","severity":1,"message":"115","line":7,"column":39,"nodeType":"116","messageId":"117","endLine":7,"endColumn":41},{"ruleId":"107","severity":1,"message":"118","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":18},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'useCustomHook' is defined but never used.","'LoadingSpinner' is defined but never used.","'useParams' is defined but never used.","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]